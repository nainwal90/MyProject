<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>約</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>加えます</value>
  </data>
  <data name="Add New" xml:space="preserve">
    <value>新しく追加する</value>
  </data>
  <data name="Angular js is a client side mvc architecture" xml:space="preserve">
    <value>Angularjsは、クライアント側MVCアーキテクチャであり、</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>接触</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>削除します</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Find some Stuff" xml:space="preserve">
    <value>いくつかのものを探します</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>ログイン</value>
  </data>
  <data name="please enter your Summary" xml:space="preserve">
    <value>あなたの概要を入力してください</value>
  </data>
  <data name="please enter your work" xml:space="preserve">
    <value>あなたの仕事を入力してください</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>セーブ</value>
  </data>
  <data name="Sign Up" xml:space="preserve">
    <value>サインアップ</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>概要</value>
  </data>
  <data name="This is Server side MVC Architecture" xml:space="preserve">
    <value>これは、サーバー側MVCアーキテクチャであります</value>
  </data>
  <data name="To Do" xml:space="preserve">
    <value>行うには</value>
  </data>
  <data name="Web Api is light weighted architecture" xml:space="preserve">
    <value>ウェブAPIは、軽量アーキテクチャです</value>
  </data>
  <data name="WhatsYourName" xml:space="preserve">
    <value>あなたの名前は何ですか</value>
  </data>
  <data name="Since 1998, Cyber Group has been providing high quality product engineering services to businesses throughout a wide array of industries. Our development teams have extensive knowledge and experience to provide our clients with superb engineering service. We believe the businesses we work with are more than just our customers; they are our partners. As such, we treat every project as if it were our own, providing valuable results all with low costs and faster entry to market. Cyber Group: Leave your engineering to us." xml:space="preserve">
    <value>1998年以来、サイバーグループは、産業の広いアレイ全体の企業に高品質な製品のエンジニアリングサービスを提供してきました。当社の開発チームは見事なエンジニアリング・サービスをお客様に提供するために、豊富な知識と経験を持っています。私たちは、私たちが働く企業が私たちの顧客以上のものと考えています。彼らは私たちのパートナーです。それは私たち自身であるかのようにそのようなものとして、我々はすべての低コストと市場へのより高速なエントリに貴重な結果を提供し、すべてのプロジェクトを扱います。サイバーグループ：私たちにあなたの技術を残します。</value>
  </data>
</root>